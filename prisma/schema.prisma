// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Prefecture {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  covidData CovidData[]
  rankData  RankData[]
}

model Lineage {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  covidData CovidData[]
  rankData  RankData[]
}

model CovidData {
  id           Int        @id @default(autoincrement())
  date         String     // 年/週番号 (例: 2022/1)
  count        Int
  ratio        Float
  prefecture   Prefecture @relation(fields: [prefectureId], references: [id])
  prefectureId Int
  lineage      Lineage    @relation(fields: [lineageId], references: [id])
  lineageId    Int
  wave         Int

  @@index([date])
  @@index([prefectureId])
  @@index([lineageId])
}

model RankData {
  id           Int        @id @default(autoincrement())
  date         String     // 年/週番号 (例: 2022/1)
  rank         Int?       // 順位 (null許可で欠損値を表現)
  prefecture   Prefecture @relation(fields: [prefectureId], references: [id])
  prefectureId Int
  lineage      Lineage    @relation(fields: [lineageId], references: [id])
  lineageId    Int
  wave         Int

  @@index([date])
  @@index([prefectureId])
  @@index([lineageId])
  @@index([wave])
}
