services:
  # Next.js アプリケーションサービス
  app:
    # Dockerfile を使用してイメージをビルド
    build:
      context: . # Dockerfile があるディレクトリ (カレントディレクトリ)
      dockerfile: Dockerfile
      target: development # Dockerfile 内の 'development' ステージをビルドターゲットとする
    container_name: covista-japan # コンテナに名前を付ける
    ports:
      - "3000:3000" # ホストのポート 3000 をコンテナのポート 3000 にマッピング
    volumes:
      # ホストのカレントディレクトリのソースコードをコンテナの /app にマウント
      - .:/app
      # prisma関連のデータは保持するように設定
      - ./prisma:/app/prisma
      # node_modules はホストと共有せず、コンテナ内でインストールされたものを使用するための設定
      - /app/node_modules
      # .next ディレクトリもコンテナ内で生成されるものを利用
      - /app/.next
    environment:
      - NODE_ENV=development # 環境変数を設定 (Next.js が開発モードで動作)
      - DATABASE_URL=file:/app/prisma/dev.db # Prisma用のデータベースURL
    # コンテナを起動し続けるための設定 (ターミナルをアタッチしたままにする)
    tty: true
    stdin_open: true # 標準入力を開いたままにする
    # エントリポイントを指定
    entrypoint: ["/bin/sh", "-c"]
    # エントリポイントスクリプトを指定
    command: ["chmod +x ./scripts/docker-entrypoint.sh && ./scripts/docker-entrypoint.sh"]